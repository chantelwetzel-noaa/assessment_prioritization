library(xtable)
weight = matrix(NA, 10, 4)
colnames(weight) = c('Factor',
'Notation',
'Weight Notation',
'Weight')
weight[1,] = c("Commercial Importance", "c","$w_c$", 0.21)
weight[2,] = c("Recrational Importance", "r", "$w_r$", 0.09)
weight[3,] = c("Tribal Importance", "t","$w_t$", 0.05)
weight[4,] = c("Constituant Demand/Choke Species", "d","$w_d$", 0.11)
weight[5,] = c("Rebuild", "o", "$w_o$", 0.10)
weight[6,] = c("Relative Stock Status", "b", "$w_b$", 0.08)
weight[7,] = c("Harvest Status", "h", "$w_h$", 0.08)
weight[8,] = c("Ecosystem Importance", "e", "$w_e$", 0.05)
weight[9,] = c("New Information Available", "n", "$w_n$", 0.05)
weight[10,] = c("Assessment Frequency", "a", "$w_a$", 0.18)
weight.table = xtable(weight,
caption = c('Weights used for each factor in the calculation of total factor score by species'),
label = 'tab:weights',
digits = c(0,0,0,0,2))
weight.table
# Add alignment
align(weight.table) = c('l',
'>{\\raggedright}p{in}',
'>{\\centering}p{1.5in}',
'>{\\centering}p{1.5in}',
'>{\\centering}p{1in}')
print(weight.table,
include.rownames=FALSE,
caption.placement='top',
sanitize.text.function = function(x){x})
weight = matrix(NA, 10, 4)
colnames(weight) = c('Factor',
'Notation',
'Weight Notation',
'Weight')
weight
weight = matrix(NA, 10, 4)
weight = matrix(NA, 10, 4)
weight
weight.table = xtable(weight,
caption = c('Weights used for each factor in the calculation of total factor score by species'),
label = 'tab:weights',
digits = c(0,0,0,0,2))
weight.table
weight = matrix(NA, 10, 3)
colnames(weight) = c('Factor',
#'Notation',
'Weight Notation',
'Weight')
weight[1,] = c("Commercial Importance", "$w_c$", 0.21)
weight[2,] = c("Recrational Importance", "$w_r$", 0.09)
weight[3,] = c("Tribal Importance","$w_t$", 0.05)
weight[4,] = c("Constituant Demand/Choke Species", "$w_d$", 0.11)
weight[5,] = c("Rebuild", "$o$", "$w_o$", 0.10)
weight[6,] = c("Relative Stock Status", "$w_b$", 0.08)
weight[7,] = c("Harvest Status", "$w_h$", 0.08)
weight[5,] = c("Rebuild", "$w_o$", 0.10)
weight[6,] = c("Relative Stock Status", "$w_b$", 0.08)
weight[7,] = c("Harvest Status", "$w_h$", 0.08)
weight[8,] = c("Ecosystem Importance", "$w_e$", 0.05)
weight[9,] = c("New Information Available", "$w_n$", 0.05)
weight[10,] = c("Assessment Frequency", "$w_a$", 0.18)
weight.table = xtable(weight,
caption = c('Weights used for each factor in the calculation of total factor score by species'),
label = 'tab:weights',
digits = c(0,0,0,2))
start.yr
end.yr = sum.yr - 2
ass.yr = 2021
sum.yr = 2020
# Summary start and end years
start.yr = 2014
end.yr = sum.yr - 2
abund[1,]  = c(1, "Stock abundance is well above the target ($SB > 2*SB_{PROXY}$)" )
abund = matrix(NA, 10, 2)
colnames(abund) = c("Score", "Stock Status")
abund[1,]  = c(1, "Stock abundance is well above the target ($SB > 2*SB_{PROXY}$)" )
abund[1,]
$0.9*SB_{PROXY} \geq SB > \text{MSST}$
adj = matrix(NA, 14, 2)
adj[1,1]  = "Assessment Age"
adj[2,]  = c("Number of years since last assessment $\\ge$ 10 years", 1)
adj[3,]  = c("Otherwise", 0)
adj[4,1]  = "Update"
adj[5,]  = c("Number of years since last assessment $<$ 6", 1)
adj[6,]  = c("Otherwise", 0)
adj[7,1]  = "Target Frequency"
adj[8,]  = c("Number of years since last assessment $\\ge T_s$", 1)
adj[9,]  = c("Otherwise", 0)
adj[10,1] = "Catch"
adj[11,] = c("Current mortality would exceed future ABC", 2)
adj[12,] = c("Current mortality is more than 75 percent of future ABC", 1)
adj[13,] = c("Current mortality is less than 20 percent of future ABC", -1)
adj[14,] = c("Otherwise", 0)
adj
adj.table = xtable(adj,
caption = c('List of scoring adjustments made depending upon assessment age, the level of recommended next assessment, the target assessment frequency, and potential of future ABCs constraint.'),
label = 'tab:penalty',
digits = c(0,0,0))
colnames(adj) = c("  ", "Score")
adj = matrix(NA, 14, 2)
adj
colnames(adj) = c("  ", "Score")
adj
knitr::kable(head(mtcars), "latex")
kable_styling(x_latex, latex_options = "striped", position = "float_left")
library(kableExtra)
install.packages("kable")
library(knitr)
knitr::kable(head(mtcars), "latex")
kable_styling(x_latex, latex_options = "striped", position = "float_left")
x_latex <- knitr::kable(head(mtcars), "latex")
kable_styling(x_latex, latex_options = "striped", position = "float_left")
table = read.csv('C:/Assessments/2020/assess_prioritization/doc/tables/assessment_history.csv')
table
table = read.csv('C:/Assessments/2020/assess_prioritization/doc/tables/assessment_history.csv', header = T)
head(table)
colnames(table) = c('Species', 2003:2019, 'Percent Unfished')
colnames()
colnames(table) = c('Species', '2003', '2005','2007','2009','2011','2013','2015','2017','2019','Percent Unfished')
head(table)
table = read.csv('C:/Assessments/2020/assess_prioritization/doc/tables/assessment_history.csv', header = T)
colnames(table) = c('Species', '2003', '2005','2007','2009','2011','2013','2015','2017','2019','Percent Unfished')
head(table)
table = read.csv('C:/Assessments/2020/assess_prioritization/doc/tables/assessment_history.csv', header = T)
colnames(table) = c('Species', '2003', '2005','2007','2009','2011','2013','2015','2017','2019','Percent Unfished')
head(table)
# Print management performance table - will have to edit the text file and
ass.table = xtable(ass,
caption=c('History of assessment since 2003 for West Coast groundfish stocks where F = full assessment, U = update assessment, DM = data moderate assessment, and dr = data report. A * indicates an assessment that was rejected by the SSC.'),
label='tab:ass_hist')
ass = read.csv('C:/Assessments/2020/assess_prioritization/doc/tables/assessment_history.csv', header = T)
colnames(ass) = c('Species', '2003', '2005','2007','2009','2011','2013','2015','2017','2019','Percent Unfished')
ass.table = xtable(ass,
caption=c('History of assessment since 2003 for West Coast groundfish stocks where F = full assessment, U = update assessment, DM = data moderate assessment, and dr = data report. A * indicates an assessment that was rejected by the SSC.'),
label='tab:ass_hist')
align(ass.table) = c('l',
'>{\\raggedright}p{1.5in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}'
)
# Add alignment
align(ass.table) = c('l',
'>{\\raggedright}p{1.5in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.25in}',
'>{\\centering}p{0.50in}'
)
print(ass.table,
include.rownames = FALSE,
caption.placement = 'top',
sanitize.text.function = function(x){x})
